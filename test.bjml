// The model itself

module Data
  # An exercise is the smallest unit a student can do in the mobile app
  datanode Exercise
    attributes
      # This is the main question
      question: Option<string>

  datanode SelectCodeExercise
    extends Exercise
    attributes
      solution: string
      options: string[]

module Database
  databaseTable exercises
    attributes
      question: Option<string>
        contains Exercise#question
      type_data: JSON
        contains SelectCode#solution
        contains SelectCode#options

module Component
  # The main question explaining the problem to the user
  component Question
    attributes
    content_delivered_by Exercise#question

// The meta-model

node datanode
  base_types
    string
    int
  type_constructors
    Option

node component
node databaseTable
  base_types
    string
    int
    JSON

edge extends
 from datanode
 to datanode
 color '#00ff00'

edge content_delivered_by
  from datanode#attribute
  to component
edge contains
  from databaseTable#attribute
  to datanode#attribute
  reverse stored_in


class edge
  has from
  has to
  has reverse
class node
  has_many base_types
  has_many type_constructors

plugin X
--------
getEdge().add(has('color'))
toPlantUmlmiddleware((ast, plantuml, next) => {
  for (edge of plantuml.getEdges()) {
    plantuml
  }
})

